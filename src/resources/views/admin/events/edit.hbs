<div class='container mt-5'>
  <a href='/events/view'>Xem</a>
  <form
    method='POST'
    action='/events/{{event._id}}?_method=PUT'
    enctype='multipart/form-data'
    class='border p-4 shadow rounded bg-light'
  >
    <h2 class='text-center text-primary'>Chỉnh Sửa Sự Kiện</h2>

    <div class='mb-3'>
      <label class='form-label fw-bold'>Tên Sự Kiện:</label>
      <input
        type='text'
        class='form-control'
        name='name'
        value='{{event.name}}'
        required
      />
    </div>

    <div class='mb-3'>
      <label class='form-label fw-bold'>Tổng quan:</label>
      <textarea
        class='form-control'
        name='overview'
      >{{event.overview}}</textarea>
    </div>

    <div class='mb-3'>
      <label class='form-label fw-bold'>Ngày đăng: 
        <small class="text-muted">
          {{#if event.dateup}}{{formatDate event.dateup 'DD/MM/YYYY'}}{{else}}{{formatDate defaultDate 'DD/MM/YYYY'}}{{/if}}
        </small>
      </label>
       <input
          type='date'
          class='form-control'
          name='dateup'
          value='{{#if event.dateup}}{{formatDate event.dateup 'YYYY-MM-DD'}}{{else}}{{formatDate defaultDate 'YYYY-MM-DD'}}{{/if}}'
        />

        
    </div>


    {{!-- <div class="mb-3">
      <label class="form-label fw-bold">Chọn Tag:</label>
      <select name="tags" multiple class="form-control">
        {{#each tags}}
          <option value="{{this._id}}" {{#if (includes ../event.tags this._id)}}selected{{/if}}>
            {{this.name}}
          </option>
        {{/each}}
      </select>
    </div> --}}

    <div class="mb-3">
      <label class="form-label fw-bold">Chọn Tag:</label>
      <div class="form-check">
        {{#each tags}}
          <div class="form-check">
            <input 
              class="form-check-input" 
              type="checkbox" 
              name="tags" 
              value="{{this._id}}" 
              id="tag-{{this._id}}" 
              {{#if (includes ../event.tags this._id)}}checked{{/if}}>
            <label class="form-check-label" for="tag-{{this._id}}">
              {{this.name}}
            </label>
          </div>
        {{/each}}
      </div>
    </div>

<div class="mb-3">
  <label class="form-label fw-bold">Chọn Hợp Phần:</label>
  {{#each hopphan}}
    <div class="form-check">
      <input class="form-check-input" type="checkbox" 
             name="hopphan" 
             value="{{this._id}}" 
             {{#if (includes ../event.hopphan this._id)}}checked{{/if}}>
      <label class="form-check-label">{{this.name}}</label>
    </div>
  {{/each}}
</div>

    <div class='mb-3'>
      <label class='form-label fw-bold'>Ảnh chính hiện tại:</label>
      <img src='{{event.image}}' class='img-thumbnail' width='150' />
      <input
        type='file'
        class='form-control mt-2'
        name='image'
        accept='image/*'
      />
    </div>

    <div class='mb-3'>
      <label class='form-label fw-bold'>Ảnh phụ:</label>
      <div style="display: flex; flex-wrap: wrap; gap: 10px;">
        {{#each event.images}}
          <div style="position:relative;">
            <img src="{{this.path}}" alt="Ảnh phụ" class="img-thumbnail" width="100">
            <div style="display: flex; align-items: center; justify-content: space-between;">
              <label>
                <input type="checkbox" class="approve-checkbox" data-id="{{../event._id}}" data-name="{{getFileName this.path}}" {{#if this.approve}}checked{{/if}}>
                Duyệt
              </label>
              <button class="btn btn-danger btn-sm delete-subimage" 
                      data-id="{{../event._id}}" 
                      data-name="{{getFileName this.path}}">X</button>
            </div>
          </div>
        {{/each}}
      </div>

      <input
        type='file'
        class='form-control mt-2'
        name='images'
        accept='image/*'
        multiple
      />
    </div>

    <h4>Tài liệu:</h4>
    <div>
      {{#each event.documents}}
        <div style="display: flex; align-items: center; gap: 10px;">
          <a href="{{this.path}}" target="_blank">{{getFileName this.path}}</a>
          <label>
            <input type="checkbox" 
                  class="approve-doc-checkbox" 
                  name="approveDocs" 
                  value="{{this.path}}" 
                  {{#if this.approve}}checked{{/if}}>
            Duyệt
          </label>
          <button class="btn btn-danger btn-sm delete-doc" 
                  data-id="{{../event._id}}" 
                  data-name="{{getFileName this.path}}">Xóa</button>
        </div>
      {{/each}}
    </div>

    <input type='file' class='form-control mt-2' name='documents' accept='.pdf,.doc,.docx' multiple />


    <button type='submit' class='btn btn-primary w-100 mt-3'>Cập nhật</button>
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const deleteButtons = document.querySelectorAll('.delete-subimage');
    const approveCheckboxes = document.querySelectorAll('.approve-checkbox');

    const form = document.querySelector('form');

    deleteButtons.forEach(button => {
        button.addEventListener('click', (e) => {
            e.preventDefault();
            
            const eventId = button.getAttribute('data-id');
            const imageName = button.getAttribute('data-name');

            if (confirm('Bạn chắc chắn muốn xóa ảnh này?')) {
                fetch(`/events/${eventId}/images/${encodeURIComponent(imageName)}`, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Xóa ảnh thất bại!');
                    }
                    return response.json();
                })
                .then(data => {
                    alert(data.message);
                    window.location.reload(); // Tải lại trang sau khi xóa
                })
                .catch(error => console.error('Lỗi:', error));
            }
        });
    });

    // Toggle approve
      form.addEventListener('submit', (e) => {
          e.preventDefault();

          const approveUpdates = [];
          approveCheckboxes.forEach(checkbox => {
              const eventId = checkbox.getAttribute('data-id');
              const imageName = checkbox.getAttribute('data-name');
              const approveStatus = checkbox.checked ? 1 : 0;

              approveUpdates.push(fetch(`/events/${eventId}/images/${encodeURIComponent(imageName)}/approve`, {
                  method: 'PATCH',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ approve: approveStatus })
              }));
          });

          Promise.all(approveUpdates)
            .then(() => {
              form.submit();
            })
            .catch(error => console.error('Lỗi khi cập nhật:', error));
      });
///////////////////////////////doc
       // Xử lý xóa tài liệu
      document.querySelectorAll('.delete-doc').forEach(button => {
        button.addEventListener('click', () => {
          const eventId = button.dataset.id;
          const docName = button.dataset.name;

          if (confirm('Bạn chắc chắn muốn xóa tài liệu này?')) {
            fetch(`/events/${eventId}/documents/${docName}`, {
              method: 'DELETE'
            })
            .then(res => res.json())
            .then(data => {
              alert(data.message);
              window.location.reload();
            })
            .catch(err => console.error('Lỗi:', err));
          }
        });
      });

      // Xử lý duyệt tài liệu khi nhấn "Cập nhật"
      form.addEventListener('submit', (e) => {
        e.preventDefault();

        const approveUpdates = [];
        document.querySelectorAll('.approve-doc-checkbox').forEach(checkbox => {
          const eventId = checkbox.dataset.id;
          const docName = checkbox.dataset.name;
          const approveStatus = checkbox.checked ? 1 : 0;

          approveUpdates.push(fetch(`/events/${eventId}/documents/${docName}/approve`, {
            method: 'PATCH',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ approve: approveStatus })
          }));
        });

        Promise.all(approveUpdates)
          .then(() => form.submit())
          .catch(err => console.error('Lỗi khi cập nhật:', err));
      });
  });



</script>