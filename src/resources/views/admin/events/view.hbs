<form action="/events/search" method="GET">
      <input type="text" name="keyword" placeholder="Nhập tên cần tìm..." value="{{keyword}}">
      <button type="submit">Tìm kiếm</button>
    </form>

<form name="container-form" method="GET" class="mt-4">
    <h3>Danh sách sự kiện</h3>
    
    <a href="/events/create">Tạo [{{ deletedCount }}]</a>
    <a href="/events/trash">Thùng rác [{{ deletedCount }}]</a>

    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col" id="image">Hình ảnh</th>
                <th scope="col" id="eventNameColumn">Tên Sự Kiện</th>
                <th scope="col" id="overviewColumn">Mô tả</th>
                {{!-- <th scope="col">Loại</th> --}}
                <th scope="col">Loại</th>
                <th scope="col"></th>
                <th>Thông báo</th>
                <th scope="col">Ngày đăng</th>
                
                <th id="Action">Hành động</th>
            </tr>
        </thead>
        <tbody>
            {{#each event}}
            <tr data-id="{{ this._id }}">
              
                <th scope="row">{{sum @index 1}}</th>
                <td>
                    <img src="{{this.image}}" alt="{{this.name}}" width="300">
                </td>
                  <td class="event-name">
                      <a href="/events/{{ this.slug_vi }}/detail" class="vi">{{ this.vi_en.vi.name }}</a>
                    <a href="/events/{{ this.slug_en }}/detail" class="en" style="display: none;">{{ this.vi_en.en.name }}</a>
                  </td>
                  <td class="event-overview">
                      <span class="vi">{{{this.vi_en.vi.overview}}}</span>
                      <span class="en" style="display: none;">{{{this.vi_en.en.overview}}}</span>
                  </td>

                {{!-- <td>
                  <form method="POST"
                        action='/events/{{event._id}}?_method=PUT'
                        enctype='multipart/form-data'
                        class='border p-4 shadow rounded bg-light'>
                      <input type="hidden" name="id" value="{{this._id}}">
                      <select class="form-control news-event-select" name="news_event" onchange="this.form.submit()">
                          <option value="0" {{#if (eq this.news_event 0)}}selected{{/if}}>Không chọn</option>
                          <option value="1" {{#if (eq this.news_event 1)}}selected{{/if}}>News</option>
                          <option value="2" {{#if (eq this.news_event 2)}}selected{{/if}}>Events</option>
                      </select>
                  </form>
                </td> --}}
                

                <td><p>Loại: {{ this.type.name }}
                  {{!-- {{#if (eq this.type "events")}}Sự kiện{{/if}}
                  {{#if (eq this.type "news")}}Tin tức{{/if}}
                  {{#if (eq this.type "course")}}Khóa học{{/if}}
                  {{#if (eq this.type "cooperate")}}Hợp tác{{/if}} --}}
                </p></td>

                <td>
                  <a href="{{ this.url }}">Xem thêm</a>
                </td>
                <td>
                  <div class="alert alert-info">
                    Có ảnh mới: <strong class="imageCount">0</strong>
                  </div>
                  <div class="alert alert-warning">
                    Có tài liệu mới: <strong class="docCount">0</strong>
                  </div>

                  <button class="btn btn-sm btn-primary mark-seen" data-id="{{ this._id }}">
                    Đã xem
                  </button>
                </td>

                <td>{{formatDate this.dateup}}</td>
                
                <td>
                    <a href="/events/{{ this._id }}/edit" class="btn btn-info">Sửa</a>
                    <a href="" class="btn btn-danger" data-bs-toggle="modal" data-id="{{ this._id }}" data-bs-target="#delete-khoa-modal">Xóa</a>
                </td>
            </tr>
            {{ else }}
            <tr>
              <td colspan="5" class="text-center">
                Bạn chưa đăng khoa nào.
                <a href="/khoa/create">Đăng khoa</a>
              </td>
            </tr>
            {{/each}} 
           
            </tr>
        </tbody>
    </table>
</form>
{{!-- Confirm deleta Khoa --}}
<div id="delete-khoa-modal" class="modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Xóa Event?</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Chắc chưa?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
        <button id="btn-delete-khoa" type="button" class="btn btn-danger">Xóa bỏ</button>
      </div>
    </div>
  </div>
</div>

<form name="delete-khoa-form" method="POST" ></form>

<script>

    document.addEventListener('DOMContentLoaded', function(){
        var eventId = null;
        var deleteForm = document.forms['delete-khoa-form'];
        var containerForm =document.forms['container-form'];
        var btnDeleteKhoa = document.getElementById('btn-delete-khoa');
        var checkAll = $('#check-all');
        var itemsCheck = $('input[name="Ids[]"]');
        var haveCheck = $('.btn-havecheck');

        const buttons = document.querySelectorAll('.mark-seen');
        const eventRows = document.querySelectorAll('tr[data-id]');

        $('#delete-khoa-modal').on('show.bs.modal', function (event){
            var button = $(event.relatedTarget);
            eventId = button.data('id');
            console.log(eventId);
            
        });
        
        btnDeleteKhoa.onclick=(function(){    
            deleteForm.action='/events/' + eventId + '?_method=DELETE';
            deleteForm.submit();
        });
        //check all
        checkAll.change(function(){
          var isCheck = $(this).prop('checked');
          itemsCheck.prop('checked', isCheck);
          renderCheckAllSubmitBtn();
          
        });
        //items check
        itemsCheck.change(function(){
          var isCheck = itemsCheck.length === $('input[name="Ids[]"]:checked').length;
          checkAll.prop('checked', isCheck);
          renderCheckAllSubmitBtn();
        });

        haveCheck.on('submit',function (e) {
          

          var isSubmit = !$(this).hasClass('disabled');
          if(!isSubmit){
            e.preventDefault();
          }
        })

        function renderCheckAllSubmitBtn(){
            var checkOut = $('input[name="Ids[]"]:checked').length;
            if(checkOut > 0){
              haveCheck.removeClass('disabled');
            }else{
              haveCheck.addClass('disabled');
            }
        }
        console.log(containerForm)

        eventRows.forEach(row => {
          const eventId = row.getAttribute('data-id');
          
          fetch(`/events/${eventId}/notifications`)
            .then(response => response.json())
            .then(data => {
              row.querySelector('.imageCount').innerText = data.totalNewImages;
              row.querySelector('.docCount').innerText = data.totalNewDocs;
            })
            .catch(error => console.error('Lỗi:', error));
        });

        {{!-- buttons.forEach(button => {
          button.addEventListener('click', () => {
            const eventId = button.getAttribute('data-id');

            fetch(`/events/${eventId}/mark-seen`, {
              method: 'PATCH',
              headers: {
                'Content-Type': 'application/json'
              }
            })
            .then(res => {
              if (!res.ok) {
                throw new Error(`HTTP error! Status: ${res.status}`);
              }
              return res.json();
            })
            .then(data => {
              alert(data.message);
              // Chuyển hướng về /events/view thay vì reload
              window.location.href = '/events/view';
            })
            .catch(err => console.error('Lỗi:', err));
          });
        }); --}}

         buttons.forEach(button => {
          button.addEventListener('click', () => {
            const eventId = button.getAttribute('data-id');

            fetch(`/events/${eventId}/mark-seen`, {
              method: 'PATCH',
              headers: { 'Content-Type': 'application/json' }
            })
            .then(res => res.json())
            .then(data => {
              alert(data.message);
              window.location.reload(); // Reload lại trang để cập nhật giao diện
            })
            .catch(err => console.error('Lỗi:', err));
          });
        });

      document.querySelectorAll('.news-event-select').forEach(select => {
          select.addEventListener('change', function () {
              this.closest('form').submit(); // Tự động gửi form khi chọn giá trị mới
          });
      });

    });

    
</script>

